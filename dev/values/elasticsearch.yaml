global:
  storageClass: "nfs"
  elasticsearch:
    service:
      name: elasticsearch
      ports:
        restAPI: 9200
  kibanaEnabled: true

## @section Elasticsearch cluster Parameters

## @param clusterName Elasticsearch cluster name
##
clusterName: elastic

## @section Master-elegible nodes parameters

master:
  ## @param master.masterOnly Deploy the Elasticsearch master-elegible nodes as master-only nodes. Recommended for high-demand deployments.
  ## If you are
  masterOnly: false
  ## @param master.replicaCount Number of master-elegible replicas to deploy
  ##
  replicaCount: 1

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param master.persistence.enabled Enable persistence using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param master.persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "nfs"
    ## @param master.persistence.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param master.persistence.size Persistent Volume Size
    ##
    size: 8Gi

## @section Data-only nodes parameters

data:
  ## @param data.replicaCount Number of data-only replicas to deploy
  ##
  replicaCount: 0

  ## Elasticsearch resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param data.resources.limits The resources limits for the data containers
  ## @param data.resources.requests [object] The requested resources for the data containers
  ##
  resources:
    limits: {}
    requests:
      cpu: 25m
      memory: 2048Mi
  ## @param data.heapSize Elasticsearch data node heap size.
  ## Note: The recommended heapSize is half of the container's memory.
  ## If omitted, it will be automatically set.
  ## Example:
  ##   heapSize: 128m
  ##
  heapSize: 1024m

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param data.persistence.enabled Enable persistence using a `PersistentVolumeClaim`
    ##
    enabled: true
    ## @param data.persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "nfs"
    ## @param data.persistence.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param data.persistence.size Persistent Volume Size
    ##
    size: 8Gi

coordinating:
  replicaCount: 0

ingest:
  replicaCount: 0

security:
  enabled: true
  # PASSWORD must be the same value passed to elasticsearch to get an "out of the box" experience
  elasticPassword: "UY4UZjf4ZKKkbf8"
  tls:
    # AutoGenerate TLS certs for elastic
    autoGenerated: true

## @section Kibana Parameters

## Bundled Kibana parameters
## @param kibana.elasticsearch.hosts [array] Array containing hostnames for the ES instances. Used to generate the URL
## @param kibana.elasticsearch.port Port to connect Kibana and ES instance. Used to generate the URL
##
kibana:
  global:
    storageClass: "nfs"

  persistence:
    ## @param persistence.enabled Enable persistence
    ##
    enabled: true
    ## @param persistence.storageClass Kibana data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: "nfs"
    ## @param persistence.accessModes Persistent Volume access modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.size Size for the PV
    ##
    size: 10Gi
  service:
    ## @param service.ports.http Kubernetes Service port
    ##
    ports:
      http: 5601
    ## @param service.type Kubernetes Service type
    ##
    type: NodePort
    ## @param service.nodePorts.http Specify the nodePort value for the LoadBalancer and NodePort service types
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePorts:
      http: "30000"

  elasticsearch:
    hosts:
      - '{{ include "elasticsearch.service.name" . }}'
    port: '{{ include "elasticsearch.service.ports.restAPI" . }}'
    security:
      auth:
        enabled: true
        # default in the elasticsearch chart is elastic
        createSystemUser: true
        kibanaPassword: "UY4UZjf4ZKKkbf8"
        elasticsearchPasswordSecret: "elasticsearch"
      tls:
        # Instruct kibana to connect to elastic over https
        enabled: true
        # Bit of a catch 22, as you will need to know the name upfront of your release
        existingSecret: elasticsearch-master-crt # or just 'elasticsearch-coordinating-crt' if the release name happens to be 'elasticsearch'
        # As the certs are auto-generated, they are pemCerts so set to true
        usePemCerts: true